#####################################################################
#	Macros
#####################################################################
######################### PRESSURE ADVANCE #########################

[gcode_macro TEMPADJUSTPA]
gcode:
    # ABS
    {% if printer.heater_bed.target >= 100 %}
        SET_PRESSURE_ADVANCE ADVANCE=0.055
    ## PETG
    #{% elif printer.heater_bed.target > 65 and printer.heater_bed.target < 100 %}
    #   SET_PRESSURE_ADVANCE ADVANCE=
    # PLA
    {% elif printer.heater_bed.target <= 65 %}
        SET_PRESSURE_ADVANCE ADVANCE=0.035
    # Catch-all
    {% else %}
        SET_PRESSURE_ADVANCE ADVANCE=0.055
    {% endif %}

######################### PRINT START / END / PURGELINE #########################

[gcode_macro PRINT_START]
# Para definir os parâmetros como variáveis persistentes para que possam ser referenciados em PRINT_START2
variable_bedtemp: 0
variable_hotendtemp: 0
variable_chambertemp: 0
gcode:      
    # Parametros
    {% set bed = params.BED|int %}
    {% set hotend = params.EXTRUDER|int %}
    {% set chamber = params.CHAMBER|default(0)|int %}

    # Defina os parâmetros como variáveis persistentes para que possam ser referenciados fora da macro (em PRINT_END)
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bedtemp VALUE={bed}   
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=hotendtemp VALUE={hotend} 
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=chambertemp VALUE={chamber}   
    
    UPDATE_DELAYED_GCODE ID=EXHAUST_OFF DURATION=0                                       # cancelar o temporizador de exaustao (se houver)
    UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0                                       # cancelar o temporizador (se houver)
    RESETSPEEDS                                                                          # redefinir velocidade, aceleracao etc para valores configurados
    M104 S140                                                                            # set hotend to no-ooze temp
    M140 S{bed}                                                                          # aquecer mesa
    G28                                                                                  # home
    G90                                                                                  # posição absuluta
    {% if printer["temperature_sensor chamber"].temperature < chamber %}                 # - se a camara ainda nao estiver na temperatura:
        HEATSOAK T={bed} MOVE=1                                                          #   heatsoak macro + mover pro centro
        M190 S{bed}                                                                      #   esperar mesa aquecer
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamber}           #   esperar temperatura final do camara
    {% else %}                                                                           # - se a camara alcançou a temperatura:
        {% if printer.heater_bed.temperature < (bed-2) %}                                # -- mas a mesa nao alcançou a temperatura (within 2C):
            HEATSOAK T={bed} MOVE=1                                                      #       heatsoak e mover
            M190 S{bed}                                                                  #       esperar mesa aquecer
        {% else %}                                                                       # -- e cama aquecida:
            HEATSOAK T={bed} MOVE=0                                                      #      heatsoak
        {% endif %}
    {% endif %} 
    M106 S0                                                                              # desligue o fan de resfriamento parcial (do heatsoak)
    BED_MESH_CLEAR                                                                       # limpar bed mesh
    ATTACH_PROBE_LOCK                                                                    # pegar klicky + lock
    QUAD_GANTRY_LEVEL                                                                    # quad gantry level
    G28 Z                                                                                # home z
    G90                                                                                  # posiçao absuluta
    G0 Z20                                                                               # subir uma pouco para evitar problemas com homming
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} F19500  # andar para o centro da cama para evitar derrubar a sonda apos o homing Z (caso contrario, o QGL apenas move nosso salto Z para baixo novamente antes de viajar)
    BED_MESH_CALIBRATE                                                                   # mesh
    G28 Z                                                                                # home z denovo
    G0 Z20                                                                               # subir uma pouco para evitar problemas com homming
    DOCK_PROBE_UNLOCK                                                                    # quardar probe, unlock
    M109 S{hotend}                                                                       # aquecer e esperar bico
    CLEANNOZZLE                                                                          # limpar bico
    TEMPADJUSTPA                                                                         # alterar PA com base na temperatura da mesa
    CALIBRATE_Z                                                                          # calibrar z offset com bico quente
    PURGE_LINE                                                                           # imprime a primeira linha
    SET_FAN_SPEED FAN=Exhaust SPEED=0.1                                                  # chamber fan para 10%
    G92 E0                                                                               # reset Extruder
    G1 X0 Y20 Z0.3 F19500.0                                                              # mover para posicao inicial
    G92 E0                                                                               # reset Extruder
    G1 Z2.0 F3000                                                                        # mover o eixo Z para cima


[gcode_macro PRINT_END]
gcode:

    #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                 # desativar sensor de filamento
    CLEAR_PAUSE                                                                          # limpar pausa (de M191) se houver uma
    {% if printer.heater_bed.temperature >= 100 %}                                       
        SET_FAN_SPEED FAN=Exhaust SPEED=1                                                # acione o exaustor em 100% para evacuar a câmara
    {% endif %}                                                 
    M400                                                                                 # espere o buffer limpar
    G92 E0                                                                               # zera o extruder
    M104 S0                                                                              # desligue apenas o hotend
    M140 S{printer["gcode_macro PRINT_START"].bedtemp|int}                               # retorne a cama à temperatura, alguns fatiadores gostam de desligá-la
    M107                                                                                 # desligue o ventilador de refrigeração
    G91                                                                                  # posição relativa
    G1 Z5 F3000                                                                          # mover o bico para cima 5mm
    G90                                                                                  # posição absuluta
    G1 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F19500.0    # mover bico para tras
    BED_MESH_CLEAR                                                                       # limpar bed mesh                                    
    UPDATE_DELAYED_GCODE ID=EXHAUST_OFF DURATION=120                                     # desliga o exaustor em 2 min
    UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=1800                                    # desligue tudo em 30 min
    RESETSPEEDS                                                                          # redefinir velocidade, aceleração etc para valores máximos configurados
    #SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0                                       # desativar XYE steppers (menos z)
    #SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0
    #SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0

[gcode_macro PURGE_LINE]
gcode:
    { action_respond_info("Purging...") }
    M117 Prime Line
    G92 E0#
    G90
    G0 X90 Y8 F6000                     # mover para X3 Y3
    G1 Z0.2 F200                        # Definir a altura do bico
    G91
    G1 X120 E30 F1200#                  # primeira linha
    G1 Y1                               # mover Y 1
    G1 X-120 E30 F1200#                 # primeira linha
    G92 E0.0                            # reset distancia de extrusão
    G1 Z1 F5000                         # subir Z   

[delayed_gcode EXHAUST_OFF]
gcode:
    SET_FAN_SPEED FAN=Exhaust SPEED=0

[delayed_gcode DELAYED_OFF]
gcode:
    OFF # 


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
	CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:

    {% set z = params.Z|default(10)|int %}                                                  # quantidade de z-hop
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                             # defina a variável z hop para referência na macro de resumo
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}   # defina a variável temp hotend para referência na macro de resumo
                                
        #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                # desativar sensor de filamento       
        SAVE_GCODE_STATE NAME=PAUSE                                                         # salvar a posição de impressão atual para retomar               
        BASE_PAUSE                                                                          # pausar impressão
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}      # verifique se zhop não excede z max
            G91                                                                             # posição relativa
            G1 Z{z} F900                                                                    # aumentar Z em z hop
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                 # se z max for excedido, mostre a mensagem e defina o valor zhop para retomar como 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                 # posição absuluta
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F19500 # mover o bico para centro da frente
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                     # salve a posição caso o bico seja movido durante a pausa (caso contrário, o zhop de retorno pode dar erro)
        M104 S0                                                                             # desligar hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                      # timeout de 12 horas
    {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parametros
    {% set e = params.E|default(2.5)|int %}
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                                                             # ativar sensor de filamento
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}                                      # definir o tempo limite de volta ao valor configurado
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                                                            # espere o hotend voltar a aquecer
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                                                         # volte para a posição caso o cabeçote da ferramenta tenha sido movido durante a pausa (caso contrário, o zhop de retorno pode dar erro)
        G91                                                                                                              # posição relativa
        M83                                                                                                              # posição relativa do extruder
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                             
            G1 Z{zhop * -1} E{e} F900                                                                                    # limpar o E e desce o Z
        {% else %}                      
            G1 Z{zhop * -1} F900                                                                                         # abaixe Z de volta (apenas no caso de estarmos testando a macro com hotend frio)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=100                                                             # restaurar posição
        BASE_RESUME                                                                                                      # retornar impressão
    {% endif %}

# Filament runout / change alias    
[gcode_macro M600]
gcode:
    PAUSE
    

######################## MISC #########################

# Substitua M109 (Wait for Hotend Temperature) por TEMPERATURE_WAIT para que não tenhamos que esperar que o PID se estabilize.
[gcode_macro M109]
rename_existing: M99109
gcode:
    {% set s = params.S|float %}
    
	M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  # Definir temperatura de hotend
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   # Aguarde a temperatura do hotend (dentro de 1 grau)
    {% endif %}

[gcode_macro RESETSPEEDS]
gcode:
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} 
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}  
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity} 

[gcode_macro G32]
gcode:
    G28
    ATTACH_PROBE_LOCK
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL
    G28 Z
    DOCK_PROBE_UNLOCK

[gcode_macro HEATSOAK]
gcode:
    # Parametros
    {% set t = params.T|default(110)|int %}
    {% set move = params.MOVE|default(1)|int %}

    UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0  # cancelar o temporizador (se houver)
    SET_FAN_SPEED FAN=Exhaust SPEED=0               # desligue o exaustor
    LEDS_RED                                        # ligar leds
    M140 S{t}                                       # Aquecer Mesa
    {% if t >= 100 %}
        M104 S180                                   # set hotend to no-ooze temp
        M106 S205                                   # ligar fan 80%
    {% else %}
        M106 S0                                     
    {% endif %}
    {% if move == 1 %}
        CG28                                        
        PARKCENTER                                  
    {% endif %}



######################### FILAMENT #########################

[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=UNLOADFILAMENT
    M83                                   
    G1 E10 F600                             
    G1 E-120 F1800                        
    RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOADFILAMENT
    M83 # definir extrusora para relativo
    G1 E90 F600
    RESTORE_GCODE_STATE NAME=LOADFILAMENT
   
[gcode_macro HOT_UNLOAD]
gcode:
    {% set t = params.T|default(240)|int %}
    
    M104 S{t}
    PARKFRONT
    M109 S{t}
    UNLOAD_FILAMENT
    
[gcode_macro HOT_LOAD]
gcode:
    {% set t = params.T|default(240)|int %}
    
    M104 S{t}
    PARKFRONT
    M109 S{t}
    LOAD_FILAMENT

######################### CONDITIONAL HOMING #########################


[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    

[gcode_macro XYCG28]
gcode:
    {% if "xy" not in printer.toolhead.homed_axes %}
        G28 X Y
    {% endif %}

[gcode_macro ZCG28]
gcode:
    {% if "z" not in printer.toolhead.homed_axes %}
        G28 Z
    {% endif %}

######################### PARKING #########################


[gcode_macro PARKFRONT]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F19500        
    RESTORE_GCODE_STATE NAME=PARKFRONT
    

[gcode_macro PARKFRONTLOW]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F19500                                     
    RESTORE_GCODE_STATE NAME=PARKFRONT
    

[gcode_macro PARKREAR]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKREAR
    G90
    G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F19500     
    RESTORE_GCODE_STATE NAME=PARKREAR


[gcode_macro PARKCENTER]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500    
    RESTORE_GCODE_STATE NAME=PARKCENTER
    

[gcode_macro PARKBED]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKBED
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F19500                                     
    RESTORE_GCODE_STATE NAME=PARKBED

######################### ALIASES/SHORTCUTS #########################

[gcode_macro QGL]
gcode:
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL
    
[gcode_macro BMC]
gcode:
    BED_MESH_CALIBRATE

# Apenas um atalho para desligar TUDO com um comando (camas, aquecedores, motores, luzes)
[gcode_macro OFF]
gcode:
    M84                                  
    TURN_OFF_HEATERS                     
    M107                                 
    SET_FAN_SPEED FAN=Exhaust SPEED=0   
    LEDS_OFF   

######################### TESTING #########################

# todos os parâmetros do Klipper no terminal, ajuda a encontrar nomes e valores de variáveis ​​para uso em macros

[gcode_macro DUMP_PARAMETERS]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}

